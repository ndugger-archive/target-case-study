exports[`test carousel -> should match snapshot 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <styled.div>
    <styled.div
        style={
            Object {
                "backgroundImage": "url(foo)",
              }
        } />
    <styled.div>
        <Styled(Icon)
            glyph="chevron_left"
            onClick={[Function]} />
        <styled.div
            current={false}
            onClick={[Function]}
            style={
                Object {
                    "backgroundImage": "url(caz)",
                  }
            } />
        <styled.div
            current={true}
            onClick={[Function]}
            style={
                Object {
                    "backgroundImage": "url(foo)",
                  }
            } />
        <styled.div
            current={false}
            onClick={[Function]}
            style={
                Object {
                    "backgroundImage": "url(bar)",
                  }
            } />
        <Styled(Icon)
            glyph="chevron_right"
            onClick={[Function]} />
    </styled.div>
</styled.div>,
  "nodes": Array [
    <styled.div>
      <styled.div
            style={
                  Object {
                        "backgroundImage": "url(foo)",
                      }
            } />
      <styled.div>
            <Styled(Icon)
                  glyph="chevron_left"
                  onClick={[Function]} />
            <styled.div
                  current={false}
                  onClick={[Function]}
                  style={
                        Object {
                              "backgroundImage": "url(caz)",
                            }
                  } />
            <styled.div
                  current={true}
                  onClick={[Function]}
                  style={
                        Object {
                              "backgroundImage": "url(foo)",
                            }
                  } />
            <styled.div
                  current={false}
                  onClick={[Function]}
                  style={
                        Object {
                              "backgroundImage": "url(bar)",
                            }
                  } />
            <Styled(Icon)
                  glyph="chevron_right"
                  onClick={[Function]} />
      </styled.div>
</styled.div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <PhotoCarousel
        photos={
                Array [
                        "foo",
                        "bar",
                        "baz",
                        "car",
                        "caz",
                      ]
        } />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": PhotoCarousel {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "photos": Array [
            "foo",
            "bar",
            "baz",
            "car",
            "caz",
          ],
        },
        "refs": Object {},
        "state": Object {
          "current": 0,
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <styled.div>
          <styled.div
                    style={
                              Object {
                                        "backgroundImage": "url(foo)",
                                      }
                    } />
          <styled.div>
                    <Styled(Icon)
                              glyph="chevron_left"
                              onClick={[Function]} />
                    <styled.div
                              current={false}
                              onClick={[Function]}
                              style={
                                        Object {
                                                  "backgroundImage": "url(caz)",
                                                }
                              } />
                    <styled.div
                              current={true}
                              onClick={[Function]}
                              style={
                                        Object {
                                                  "backgroundImage": "url(foo)",
                                                }
                              } />
                    <styled.div
                              current={false}
                              onClick={[Function]}
                              style={
                                        Object {
                                                  "backgroundImage": "url(bar)",
                                                }
                              } />
                    <Styled(Icon)
                              glyph="chevron_right"
                              onClick={[Function]} />
          </styled.div>
</styled.div>,
        "_debugID": 2,
        "_renderedOutput": <styled.div>
          <styled.div
                    style={
                              Object {
                                        "backgroundImage": "url(foo)",
                                      }
                    } />
          <styled.div>
                    <Styled(Icon)
                              glyph="chevron_left"
                              onClick={[Function]} />
                    <styled.div
                              current={false}
                              onClick={[Function]}
                              style={
                                        Object {
                                                  "backgroundImage": "url(caz)",
                                                }
                              } />
                    <styled.div
                              current={true}
                              onClick={[Function]}
                              style={
                                        Object {
                                                  "backgroundImage": "url(foo)",
                                                }
                              } />
                    <styled.div
                              current={false}
                              onClick={[Function]}
                              style={
                                        Object {
                                                  "backgroundImage": "url(bar)",
                                                }
                              } />
                    <Styled(Icon)
                              glyph="chevron_right"
                              onClick={[Function]} />
          </styled.div>
</styled.div>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <PhotoCarousel
    photos={
        Array [
            "foo",
            "bar",
            "baz",
            "car",
            "caz",
          ]
    } />,
}
`;
